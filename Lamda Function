const https = require('https');

exports.handler = async (event) => {
    const city = event.queryStringParameters?.city || 'Dallas';
    const apiKey = process.env.OPENWEATHER_API_KEY;

    if (!apiKey) {
        console.error("Missing OPENWEATHER_API_KEY in environment variables.");
        return {
            statusCode: 500,
            body: JSON.stringify({ error: "Server configuration error." }),
        };
    }

    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(city)}&appid=${apiKey}&units=imperial`;

    try {
        console.log("Calling API URL:", apiUrl);
        const weatherData = await fetchWeatherData(apiUrl);
        console.log("Weather data received:", weatherData);

        return {
            statusCode: 200,
            body: JSON.stringify({
                city,
                temperature: weatherData.main.temp,
                weather: weatherData.weather[0].description
            }),
        };
    } catch (error) {
        console.error("Error fetching weather data:", error.message || error);
        return {
            statusCode: 500,
            body: JSON.stringify({ error: "Unable to retrieve weather data." }),
        };
    }
};

function fetchWeatherData(url) {
    return new Promise((resolve, reject) => {
        https.get(url, (res) => {
            let data = '';

            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                try {
                    const parsed = JSON.parse(data);
                    parsed.cod !== 200
                        ? reject(new Error(parsed.message))
                        : resolve(parsed);
                } catch (e) {
                    reject(e);
                }
            });
        }).on('error', reject);
    });
}
